buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "http://repository.jboss.org/nexus/content/groups/public/" }
        maven { url 'https://repo.spring.io/plugins-release' }
        maven { url "http://maven.research.rackspacecloud.com/content/repositories/releases" }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath 'org.hibernate.build.gradle:gradle-maven-publish-auth:2.0.1'
        classpath 'org.springframework.build.gradle:propdeps-plugin:0.0.7'
        classpath "com.github.jacobono:gradle-jaxb-plugin:1.3.5"
    }
}

configure(allprojects) {
    apply plugin: 'propdeps'
    apply plugin: 'propdeps-maven'
    apply plugin: 'propdeps-idea'
}

allprojects {
    apply plugin: 'idea'
}

subprojects {
    apply plugin: 'scala'
    group = 'org.openrepose.filters.impersonation'
    version = '3.0'

    repositories {
        mavenCentral()
    }

    dependencies {
        compile "org.scala-lang:scala-library:2.10.4"
    }

    tasks.withType(ScalaCompile) {
        scalaCompileOptions.useAnt = false
    }

    task 'create-dirs' << {
        sourceSets.all { set ->
            set.allSource.srcDirs.each { it.mkdirs() }
        }
    }

}

/**
 * Because an Ear project is always the same, this is a function to clean up our build script
 * @param projectName The name of the ear project
 * @param deps a list of dependencies that will go in this ear
 * @return
 */
def filterBundleProject(String projectName, List<String> deps) {
    project(projectName) {
        apply plugin: 'ear'
        apply plugin: 'maven'
        apply plugin: 'maven-publish'
        apply plugin: 'maven-publish-auth'

        dependencies {
            deps.each { proj ->
                deploy project(proj)
                earlib project(proj).configurations.runtime
            }
        }

        publishing {
            publications {
                maven(MavenPublication) {
                    artifact ear
                }
            }
            repositories {
                maven {
                    name "releases.maven.research.rackspace.com"
                    url "http://maven.research.rackspacecloud.com/content/repositories/releases"
                }
            }
        }
    }

}

project(':impersonation-filter') {
    apply plugin: "com.github.jacobono.jaxb"
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "http://maven.research.rackspacecloud.com/content/repositories/releases" }
    }
    dependencies {
        compile 'javax:javaee-api:6.0'
        compile 'org.apache.commons:commons-lang3:3.3.2'
        compile 'com.typesafe.scala-logging:scala-logging-slf4j_2.10:2.1.2'
        compile 'org.openrepose:utilities:7.1.5.1'
        compile 'org.openrepose:core-lib:7.1.5.1'
        jaxb 'com.sun.xml.bind:jaxb-xjc:2.1.8'
        jaxb "org.jvnet.jaxb2_commons:jaxb2-basics-ant:0.6.5"
        jaxb "org.jvnet.jaxb2_commons:jaxb2-basics:0.6.4"
        jaxb "org.jvnet.jaxb2_commons:jaxb2-basics-annotate:0.6.4"
    }

    jaxb {
        xsdDir = "${project.name}/src/main/resources/META-INF/schema/config"
        xjc {
            taskClassname = "org.jvnet.jaxb2_commons.xjc.XJC2Task"
            generatePackage    = "org.openrepose.filters.config"
            args               = ["-Xinheritance", "-Xannotate"]
        }
    }
}

filterBundleProject(':impersonation-filter-bundle-impersonation-filter-bundle', [':impersonation-filter'])
